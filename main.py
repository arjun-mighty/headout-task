"""Script to Deploy jar"""

import subprocess
import sys

from loguru import logger

logger.remove()
logger.add(
    sys.stdout,
    format="<green>[{time:HH:mm:ss.SSS}]</green> <level>[{level: <8}]</level> {message}",
    colorize=True,
)

def generate_dockerfile(jarfile: str):
    """Generate Dockerfile for a jarfile"""
    logger.info(f"Generating Dockerfile for: {jarfile}")

    content = \
f"""
# Autogenerated
FROM eclipse-temurin:24.0.1_9-jre
COPY build/lib/ /app
WORKDIR /app
ENTRYPOINT ["java", "-jar", "{jarfile}"]
"""
    with open("Dockerfile", "w") as f:
        f.write(content)


def main():
    """Main fn"""

    logger.info("Trying to clone git repo.")
    try:
        subprocess.run("git clone https://github.com/arjun-mighty/headout_jar.git webservice", shell=True, check=True)
    except subprocess.CalledProcessError:
        logger.error("Failed to clone git repo.")
        sys.exit()

    logger.info("Infering jar file name.")
    try:
        jarfile = ""
        infer_proc_out = subprocess.run("ls -t1 webservice/build/lib | head -n1", shell=True, check=True, capture_output=True, text=True)
        jarfile = infer_proc_out.stdout.strip()
        logger.info(f"Found jar file: {jarfile}")
    except subprocess.CalledProcessError:
        logger.error("Failed to infer jar file name.")
        sys.exit()


    try:
        generate_dockerfile("testing.jar")
    except Exception:
        logger.error("Failed generating docker file.")

if __name__ == "__main__":
    main()
